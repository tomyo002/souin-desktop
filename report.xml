<?xml version="1.0" encoding="UTF-8"?>

<checkstyle version="5.0">
  <file name="app.go">
    <error column="2" line="14" message="found a struct that contains a context.Context field" severity="error" source="containedctx"></error>
    <error column="2" line="8" message="import &#39;github.com/go-gorp/gorp&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="9" message="import &#39;github.com/mattn/go-sqlite3&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="10" line="86" message="Error return value of `app.Add` is not checked" severity="error" source="errcheck"></error>
    <error column="10" line="19" message="main.App is missing field ctx" severity="error" source="exhaustruct"></error>
    <error column="10" line="50" message="main.InstanceApp is missing field dbmap" severity="error" source="exhaustruct"></error>
    <error column="12" line="62" message="gorp.DbMap is missing fields TypeConverter, ExpandSliceArgs" severity="error" source="exhaustruct"></error>
    <error column="34" line="63" message="main.Instance is missing fields Id, Name, BaseUrl, Authentication" severity="error" source="exhaustruct"></error>
    <error column="14" line="12" message="Comment should end in a period" severity="error" source="godot"></error>
    <error column="47" line="17" message="Comment should end in a period" severity="error" source="godot"></error>
    <error column="38" line="23" message="Comment should end in a period" severity="error" source="godot"></error>
    <error column="2" line="89" message="S1023: redundant `return` statement" severity="error" source="gosimple"></error>
    <error column="2" line="67" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="2" line="76" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="2" line="94" message="return with no blank line before" severity="error" source="nlreturn"></error>
    <error column="2" line="34" message="var-naming: struct field Id should be ID" severity="warning" source="revive"></error>
    <error column="2" line="36" message="var-naming: struct field BaseUrl should be BaseURL" severity="warning" source="revive"></error>
    <error column="24" line="35" message="tag is not aligned, should be: db:&#34;name&#34;             json:&#34;name&#34;" severity="error" source="tagalign"></error>
    <error column="16" line="40" message="tag is not aligned, should be: db:&#34;token&#34;  json:&#34;token&#34;" severity="error" source="tagalign"></error>
    <error column="16" line="41" message="tag is not aligned, should be: db:&#34;type&#34;   json:&#34;type&#34;" severity="error" source="tagalign"></error>
    <error column="16" line="42" message="tag is not aligned, should be: db:&#34;header&#34; json:&#34;header,omitempty&#34;" severity="error" source="tagalign"></error>
    <error column="2" line="54" message="variable name &#39;db&#39; is too short for the scope of its usage" severity="error" source="varnamelen"></error>
    <error column="10" line="56" message="error returned from external package is unwrapped: sig: func database/sql.Open(driverName string, dataSourceName string) (*database/sql.DB, error)" severity="error" source="wrapcheck"></error>
    <error column="10" line="60" message="error returned from external package is unwrapped: sig: func (*database/sql.DB).Ping() error" severity="error" source="wrapcheck"></error>
    <error column="15" line="74" message="error returned from external package is unwrapped: sig: func (*github.com/go-gorp/gorp.DbMap).Select(i interface{}, query string, args ...interface{}) ([]interface{}, error)" severity="error" source="wrapcheck"></error>
    <error column="9" line="80" message="error returned from external package is unwrapped: sig: func (*github.com/go-gorp/gorp.DbMap).Insert(list ...interface{}) error" severity="error" source="wrapcheck"></error>
    <error column="2" line="58" message="assignments should only be cuddled with other assignments" severity="error" source="wsl"></error>
    <error column="2" line="59" message="only one cuddle assignment allowed before if statement" severity="error" source="wsl"></error>
    <error column="2" line="65" message="assignments should only be cuddled with other assignments" severity="error" source="wsl"></error>
    <error column="2" line="73" message="only one cuddle assignment allowed before if statement" severity="error" source="wsl"></error>
    <error column="2" line="85" message="ranges should only be cuddled with assignments used in the iteration" severity="error" source="wsl"></error>
  </file>
  <file name="main.go">
    <error column="2" line="6" message="import &#39;github.com/wailsapp/wails/v2&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="7" message="import &#39;github.com/wailsapp/wails/v2/pkg/options&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="2" line="8" message="import &#39;github.com/wailsapp/wails/v2/pkg/options/assetserver&#39; is not allowed from list &#39;Main&#39;" severity="error" source="depguard"></error>
    <error column="18" line="18" message="Error return value of `instanceApp.Init` is not checked" severity="error" source="errcheck"></error>
    <error column="20" line="21" message="options.App is missing fields DisableResize, Fullscreen, Frameless, MinWidth, MinHeight, MaxWidth, MaxHeight, StartHidden, HideWindowOnClose, AlwaysOnTop, Assets, AssetsHandler, Menu, Logger, LogLevel, LogLevelProduction, OnDomReady, OnShutdown, OnBeforeClose, EnumBind, WindowStartState, ErrorFormatter, CSSDragProperty, CSSDragValue, EnableDefaultContextMenu, EnableFraudulentWebsiteDetection, SingleInstanceLock, Windows, Mac, Linux, Experimental" severity="error" source="exhaustruct"></error>
    <error column="17" line="25" message="assetserver.Options is missing fields Handler, Middleware" severity="error" source="exhaustruct"></error>
    <error column="3" line="40" message="use of `println` forbidden by pattern `^(fmt\.Print(|f|ln)|print|println)$`" severity="error" source="forbidigo"></error>
    <error column="0" line="38" message="File is not `gofumpt`-ed" severity="error" source="gofumpt"></error>
    <error column="11" line="23" message="Magic number: 1024, in &lt;assign&gt; detected" severity="error" source="gomnd"></error>
    <error column="11" line="24" message="Magic number: 768, in &lt;assign&gt; detected" severity="error" source="gomnd"></error>
    <error column="38" line="28" message="Magic number: 27, in &lt;assign&gt; detected" severity="error" source="gomnd"></error>
  </file>
</checkstyle>
